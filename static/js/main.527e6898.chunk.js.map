{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Container.module.css","components/ContactForm/ContactForm.module.css","components/Container/Container.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","Container","children","className","s","container","INITIAL_STATE","name","number","ContactForm","state","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","resetForm","this","form","label","type","placeholder","onChange","input","button","Component","ContactList","contacts","onDeleteContact","list","map","id","item","onClick","Filter","filter","App","shortid","generate","handleAddContact","contact","find","toLowerCase","alert","handleChangeFilter","getVisibleContacts","normalizedFilter","includes","handleDeleteContact","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevState","nextContacts","setItem","stringify","visibleContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.527e6898.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2L4gO\",\"input\":\"Filter_input__w4peb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2Szp6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1juBs\",\"label\":\"ContactForm_label__2K4BM\",\"input\":\"ContactForm_input__ytC-X\",\"button\":\"ContactForm_button__1v3S_\"};","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nfunction Container ({children }) {\r\n    return (\r\n    <div className={s.container}>\r\n      {children}\r\n    </div>\r\n    );\r\n}\r\n\r\nContainer.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n};\r\n  \r\nexport default Container;","import React, { Component } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\n\r\nconst INITIAL_STATE = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nclass ContactForm extends Component {\r\n  state = INITIAL_STATE;\r\n\r\nhandleChange = e => {\r\n  const { name, value } = e.currentTarget;\r\n  this.setState({ [name]: value });\r\n};\r\n\r\nhandleSubmit = e => {\r\n  e.preventDefault();\r\n\r\n  this.props.onSubmit(this.state);\r\n  this.resetForm();\r\n};\r\n\r\nresetForm = () => this.setState(INITIAL_STATE);\r\n\r\nrender() {\r\n  const { name, number } = this.state;\r\n  return (\r\n    <form onSubmit={this.handleSubmit} className={s.form}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Enter name\"\r\n          value={name}\r\n          onChange={this.handleChange}\r\n          className={s.input}\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          type=\"number\"\r\n          name=\"number\"\r\n          placeholder=\"Enter phone number\"\r\n          value={number}\r\n          onChange={this.handleChange}\r\n          className={s.input}\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={s.button}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n        <ul className={s.list}>\r\n        {contacts.map(({ id, name, number }) => (\r\n            <li className={s.item} key={id}>\r\n          <p>\r\n           {name}: {number}\r\n          </p>\r\n          <button\r\n            type=\"button\"\r\n            className={s.button}\r\n            onClick={() => onDeleteContact(id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n  \r\nexport default ContactList;\r\n\r\n","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ filter, onChange }) => (\r\n    <label className={s.label}>\r\n      Find contact by name\r\n      <input\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={onChange}\r\n        placeholder=\"Enter name for search\"\r\n        className={s.input}\r\n      />\r\n    </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n\r\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\n\nimport Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nclass App extends Component {\nstate = {\n  contacts: [\n      { id: shortid.generate(), name: 'Rosie Simpson', number: '459-12-56' },\n      { id: shortid.generate(), name: 'Hermione Kline', number: '443-89-12' },\n      { id: shortid.generate(), name: 'Eden Clements', number: '645-17-79' },\n      { id: shortid.generate(), name: 'Annie Copeland', number: '227-91-26' },\n    ],\n  filter: '',\n};\n\nhandleAddContact = ({ name, number }) => {\nconst { contacts } = this.state;\n// nameInputId = shortid.generate();\nconst contact = {\n  id: shortid.generate(),\n  name,\n  number,\n};\n\nif (\n  contacts.find(\n    contact => contact.name.toLowerCase() === name.toLowerCase(),\n  )\n) {\n  alert('Contact is already exists!');\n} else if (!name || !number) {\n  alert('The field cannot be empty!');\n} else\n  this.setState(({ contacts }) => ({\n    contacts: [contact, ...contacts],\n  }));\n};\n\nhandleChangeFilter = e => {\n  this.setState({ filter: e.currentTarget.value });\n};\n\ngetVisibleContacts = () => {\n  const { contacts, filter } = this.state;\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nhandleDeleteContact = id =>\nthis.setState(({ contacts }) => ({\n  contacts: contacts.filter(contact => contact.id !== id),\n}));\n\ncomponentDidMount() {\n  const contacts = localStorage.getItem('contacts');\n  const parsedContacts = JSON.parse(contacts);\n  if (parsedContacts) {\n    this.setState({ contacts: parsedContacts });\n  }\n}\n\ncomponentDidUpdate(prevProps, prevState) {\n  const nextContacts = this.state.contacts;\n  const prevContacts = prevState.contacts;\n\n  if (nextContacts !== prevContacts) {\n    localStorage.setItem('contacts', JSON.stringify(nextContacts));\n  }\n}\n\n\nrender() {\n  const visibleContacts = this.getVisibleContacts();\n  const { filter } = this.state;\n    \n  return (\n    <div>\n      <Container>\n        <h1>Phonebook</h1>\n          <ContactForm onSubmit={this.handleAddContact}/>\n      </Container>\n\n      <Container>\n        <h2>Contacts</h2>\n          <Filter \n          filter={filter} \n          onChange={this.handleChangeFilter} \n          />\n          <ContactList \n          contacts={visibleContacts} \n          onDeleteContact={this.handleDeleteContact}\n          />\n      </Container>\n    </div>\n  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2USXK\",\"item\":\"ContactList_item__2AB8F\",\"button\":\"ContactList_button__1d6YH\"};"],"sourceRoot":""}